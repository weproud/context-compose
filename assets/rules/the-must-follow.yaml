version: 1
kind: rule
name: The Must Follow Rule
description: Critical rules that must be followed unconditionally in all circumstances
prompt: |
  Develop only what is explicitly requested; do not add features beyond the scope.
  Protect sensitive data, validate all inputs, and test thoroughly before committing.
  Follow established coding standards and document decisions clearly.
  If requirements are unclear, ask for clarification immediately.
enhanced-prompt: |-
  ### Scope Adherence
  - **Requirement Compliance**: Develop only explicitly requested features. Do not add "nice-to-have" features arbitrarily. If requirements are unclear, confirm them before proceeding.
  - **No Scope Creep**: Focus solely on the defined acceptance criteria. Document any discovered additional issues separately for future discussion.

  ### Safety & Security
  - **Data Protection**: Never expose sensitive information like API keys or passwords. Validate and sanitize all user inputs, and adhere to the principle of least privilege.
  - **System Integrity**: Do not modify production systems without authorization. Always back up critical data before making changes and test thoroughly in dev/staging environments first.

  ### Quality Assurance
  - **Testing Requirements**: All code changes must include appropriate tests and must not break existing functionality. Passing tests is a prerequisite for task completion.
  - **Code Standards**: Follow established coding conventions without exception. Code must be readable and maintainable. Do not include debugging code or `console.log` statements in production code.

  ### Communication & Documentation
  - **Transparency**: Immediately share any issues that arise. Document all assumptions and decisions to provide clear progress updates.
  - **Knowledge Preservation**: Document complex solutions and their reasoning. Keep relevant documentation up-to-date. Write clear commit histories and PR descriptions.

  ### Emergency Protocols
  - **Critical Issues**: Stop work immediately if a security vulnerability is discovered. Report it to the relevant team and follow incident response procedures.

  **When in doubt, always ask. It is better to clarify requirements than to deliver the wrong solution.**
