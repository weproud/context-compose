version: 1
kind: action
name: Code Review
description: Comprehensive code review process with automated analysis and quality checks
prompt: |
  Conduct comprehensive code reviews with automated analysis and detailed feedback.

  This action performs systematic code review including automated quality checks,
  security analysis, performance evaluation, and generates structured feedback
  reports. It analyzes code changes, validates best practices, and provides
  actionable recommendations for improvement.

  Use this for pull request reviews, code quality audits, or before merging
  critical changes. The process includes automated testing, security scanning,
  and generates professional review documentation for team collaboration.
enhanced-prompt: |-
  # 🔍 Code Review Workflow

  ## Core Steps

  **1. Setup & Analysis**
  ```bash
  # Get review context
  CURRENT_BRANCH=$(git branch --show-current)
  BASE_BRANCH=${1:-main}

  # Analyze changes
  git diff --stat $BASE_BRANCH..$CURRENT_BRANCH
  FILES_CHANGED=$(git diff --name-only $BASE_BRANCH..$CURRENT_BRANCH | wc -l)
  LINES_ADDED=$(git diff --numstat $BASE_BRANCH..$CURRENT_BRANCH | awk '{sum+=$1} END {print sum+0}')

  echo "📊 Changes: $FILES_CHANGED files, $LINES_ADDED lines added"
  ```

  **2. Automated Quality Checks**
  ```bash
  # Run linting and type checking
  npm run lint 2>/dev/null || echo "⚠️ No linter configured"
  [ -f "tsconfig.json" ] && npx tsc --noEmit

  # Security scan
  npm audit 2>/dev/null || echo "⚠️ No security audit"

  # Run tests
  npm test 2>/dev/null || echo "⚠️ No tests configured"
  ```

  **3. Code Quality Analysis**
  ```bash
  # Check for common issues
  TODO_COUNT=$(git diff $BASE_BRANCH..$CURRENT_BRANCH | grep -i "TODO\|FIXME" | wc -l)
  CONSOLE_LOGS=$(git diff $BASE_BRANCH..$CURRENT_BRANCH | grep -E "console\.(log|debug)" | wc -l)

  echo "📝 TODOs/FIXMEs: $TODO_COUNT"
  echo "🖥️ Console statements: $CONSOLE_LOGS"

  # Large files check
  git diff --name-only $BASE_BRANCH..$CURRENT_BRANCH | xargs wc -l 2>/dev/null | awk '$1 > 500 {print $2 " is large (" $1 " lines)"}'
  ```

  **4. Generate Review Report**
  ```bash
  # Create review checklist
  cat > /tmp/code_review.md << EOF
  # Code Review - $CURRENT_BRANCH

  ## Summary
  - Files changed: $FILES_CHANGED
  - Lines added: $LINES_ADDED
  - TODOs: $TODO_COUNT
  - Console logs: $CONSOLE_LOGS

  ## Checklist
  - [ ] Code follows style guidelines
  - [ ] Functions have meaningful names
  - [ ] Adequate test coverage
  - [ ] No security vulnerabilities
  - [ ] Performance considerations addressed
  - [ ] Documentation updated

  ## Recommendation
  - [ ] ✅ Approve
  - [ ] 🔄 Request changes
  - [ ] ❌ Reject
  EOF

  echo "📄 Review report: /tmp/code_review.md"
  ```

  **🎯 Result:** Comprehensive code review with automated analysis and structured feedback
