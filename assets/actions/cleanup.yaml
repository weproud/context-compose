version: 1
kind: action
name: Cleanup
description: Comprehensive project cleanup including dependencies, cache, logs, and temporary files
prompt: |
  Perform comprehensive project cleanup to optimize performance and storage.

  This action removes unnecessary files, clears caches, updates dependencies,
  and optimizes project structure. It includes safe removal of temporary files,
  log cleanup, dependency pruning, and performance optimization while
  preserving essential project data.

  Use this for maintenance, before releases, or when experiencing performance
  issues. The process includes backup creation, selective cleanup, and
  validation to ensure project integrity after cleanup operations.
enhanced-prompt: |-
  # 🧹 Project Cleanup Workflow

  ## Core Steps

  **1. Cleanup Assessment**
  ```bash
  # Analyze current project size
  echo "📊 Project size before cleanup:"
  du -sh . 2>/dev/null || echo "Size calculation unavailable"

  # Check for large directories
  echo "📁 Large directories:"
  du -sh */ 2>/dev/null | sort -hr | head -5

  # Count files
  FILE_COUNT=$(find . -type f | wc -l)
  echo "📄 Total files: $FILE_COUNT"
  ```

  **2. Safe File Cleanup**
  ```bash
  # Remove node_modules and reinstall
  if [ -d "node_modules" ]; then
    echo "📦 Cleaning node_modules..."
    rm -rf node_modules/
    npm ci || npm install
  fi

  # Clear build artifacts
  echo "🔨 Removing build artifacts..."
  rm -rf dist/ build/ .next/ out/ coverage/

  # Clean logs
  echo "📝 Cleaning logs..."
  rm -rf logs/*.log 2>/dev/null || true
  find . -name "*.log" -type f -delete 2>/dev/null || true

  # Remove temporary files
  echo "🗑️ Removing temporary files..."
  find . -name "*.tmp" -o -name "*.temp" -o -name ".DS_Store" -delete 2>/dev/null || true
  ```

  **3. Cache & Dependencies**
  ```bash
  # Clear npm cache
  echo "🗂️ Clearing npm cache..."
  npm cache clean --force 2>/dev/null || true

  # Remove unused dependencies
  echo "📦 Checking for unused dependencies..."
  npx depcheck 2>/dev/null || echo "⚠️ Depcheck not available"

  # Update dependencies
  echo "⬆️ Updating dependencies..."
  npm update 2>/dev/null || echo "⚠️ Update failed"

  # Audit and fix
  npm audit fix 2>/dev/null || echo "⚠️ No security fixes available"
  ```

  **4. Cleanup Verification**
  ```bash
  # Verify project still works
  echo "🔍 Verifying project integrity..."
  npm test 2>/dev/null || echo "⚠️ Tests not available"
  npm run build 2>/dev/null || echo "⚠️ Build not available"

  # Final size check
  echo "📊 Project size after cleanup:"
  du -sh . 2>/dev/null || echo "Size calculation unavailable"

  NEW_FILE_COUNT=$(find . -type f | wc -l)
  REMOVED_FILES=$((FILE_COUNT - NEW_FILE_COUNT))

  echo "✅ Cleanup completed:"
  echo "  - Files removed: $REMOVED_FILES"
  echo "  - Current files: $NEW_FILE_COUNT"
  echo "  - Project optimized and verified"
  ```

  **🎯 Result:** Optimized project with cleaned dependencies, cache, and temporary files
