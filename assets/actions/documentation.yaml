version: 1
kind: action
name: Documentation
description: Comprehensive documentation generation and maintenance for code, APIs, and project setup
prompt: |
  Generate comprehensive project documentation including README, API docs, and setup guides.
  Create automated documentation with proper structure and user-friendly content.
  Maintain living documentation that evolves with code changes.
  Focus on clarity, practical examples, and accessibility for different skill levels.
enhanced-prompt: |-
  # 📖 Documentation Generation

  ## Core Documentation Types

  **1. README Generation**
  ```bash
  PROJECT_NAME=$(basename $(pwd))
  cat > README.md << EOF
  # $PROJECT_NAME

  ## 🚀 Quick Start
  ### Prerequisites
  - Node.js (v16+)
  - npm or yarn

  ### Installation
  \`\`\`bash
  git clone <repository-url>
  cd $PROJECT_NAME
  npm install
  cp .env.example .env
  \`\`\`

  ### Development
  \`\`\`bash
  npm run dev
  \`\`\`

  ## 📋 Available Scripts
  - \`npm run dev\` - Start development server
  - \`npm test\` - Run tests
  - \`npm run build\` - Build for production
  - \`npm run lint\` - Code linting

  ## 🤝 Contributing
  1. Fork repository
  2. Create feature branch
  3. Commit changes
  4. Push to branch
  5. Open Pull Request
  EOF
  ```

  **2. API Documentation**
  ```bash
  mkdir -p docs
  cat > docs/API.md << EOF
  # API Documentation

  ## Base URL
  \`http://localhost:3000/api\`

  ## Authentication
  Bearer token required for protected endpoints.

  ## Endpoints
  ### GET /health
  Health check endpoint
  \`\`\`json
  {
    "status": "ok",
    "timestamp": "2023-12-05T10:30:00Z"
  }
  \`\`\`
  EOF
  ```

  **3. Changelog Generation**
  ```bash
  cat > CHANGELOG.md << EOF
  # Changelog

  ## [Unreleased]
  ### Added
  - Initial project setup
  - Basic documentation

  ## [1.0.0] - $(date +%Y-%m-%d)
  ### Added
  - Initial project release
  EOF
  ```

  **🎯 Result:** Complete documentation structure with essential project information
