version: 1
kind: action
name: Build
description: Build project with optimization, validation, and artifact generation
prompt: |
  Build the project with comprehensive optimization, validation, and quality assurance.

  This action performs a complete build process including dependency management, 
  code quality checks, compilation, and artifact generation. It validates the 
  build environment, runs pre-build checks, optimizes the output, and generates 
  detailed build reports.

  Use this when you need to create production-ready builds, validate code quality,
  or prepare artifacts for deployment. The process includes automated testing,
  security audits, and performance analysis to ensure build reliability.
enhanced-prompt: |-
  # 🔨 Build Workflow

  ## Core Steps

  **1. Environment Check & Cleanup**
  ```bash
  # Check environment
  node --version && npm --version
  [ -f "package.json" ] || { echo "❌ No package.json"; exit 1; }

  # Clean previous builds
  rm -rf dist/ build/ .next/ out/ node_modules/.cache/
  ```

  **2. Dependencies & Quality Checks**
  ```bash
  # Install dependencies
  [ -f "package-lock.json" ] && npm ci || npm install

  # Security audit
  npm audit --audit-level=high

  # Type checking & linting
  [ -f "tsconfig.json" ] && npx tsc --noEmit
  npm run lint 2>/dev/null || npx eslint src/
  npm test 2>/dev/null || echo "⚠️ No tests"
  ```

  **3. Build Execution**
  ```bash
  # Determine and run build
  if grep -q '"build"' package.json; then
    npm run build
  elif [ -f "webpack.config.js" ]; then
    npx webpack --mode=production
  elif [ -f "vite.config.js" ]; then
    npx vite build
  else
    echo "❌ No build config found"; exit 1
  fi
  ```

  **4. Validation & Analysis**
  ```bash
  # Find build directory
  BUILD_DIR=$(ls -d dist build .next out 2>/dev/null | head -1)

  # Validate outputs
  [ -d "$BUILD_DIR" ] || { echo "❌ No build output"; exit 1; }

  # Size analysis
  du -sh "$BUILD_DIR"
  find "$BUILD_DIR" -name "*.js" -o -name "*.css" | wc -l

  echo "✅ Build completed: $BUILD_DIR"
  ```

  **🎯 Result:** Production-ready build with validation and optimization
