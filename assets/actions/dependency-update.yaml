version: 1
kind: action
name: Dependency Update
description: Safe dependency updates with compatibility checking and testing
prompt: |
  Update project dependencies safely with comprehensive compatibility validation and testing.
  Prioritize security patches and apply updates systematically with rollback procedures.
  Test thoroughly after each update batch to ensure system stability.
  Document all changes and maintain version compatibility throughout the process.
enhanced-prompt: |-
  **Update project dependencies safely with comprehensive compatibility validation and testing.**

  ## Update Strategy
  1. **Security & Maintenance:**
     - Update packages with known security vulnerabilities
     - Apply critical bug fixes and patches
     - Maintain compatibility with current codebase
     - Ensure stable dependency tree

  2. **Version Management:**
     - Follow semantic versioning principles
     - Prioritize patch and minor updates
     - Carefully evaluate major version updates
     - Maintain lock file consistency

  ## Update Process
  1. **Pre-update Analysis:**
     - Audit current dependencies for vulnerabilities
     - Check for outdated packages and available updates
     - Analyze dependency tree for conflicts
     - Review breaking changes in changelogs

  2. **Update Categories:**
     - **Security Updates (Critical):** Packages with known CVEs
     - **Maintenance Updates (High):** Bug fixes and stability improvements
     - **Feature Updates (Medium):** New functionality that could benefit project
     - **Major Updates (Low):** Breaking changes requiring code modifications

  3. **Testing & Validation:**
     - Run full test suite after each update batch
     - Check TypeScript compilation
     - Validate build process
     - Test critical application paths

  ## Rollback Strategy
  1. **Failure Detection:**
     - Monitor test failures and build errors
     - Check for runtime errors and exceptions
     - Validate performance degradation
     - Review user-facing functionality

  2. **Rollback Process:**
     - Restore previous package.json and lock files
     - Clear node_modules and reinstall
     - Re-run tests to confirm stability
     - Document issues for future reference

  ## Success Criteria
  - ✅ All security vulnerabilities addressed
  - ✅ Dependencies updated without breaking functionality
  - ✅ All tests pass after updates
  - ✅ Build process remains stable
  - ✅ No performance regressions detected
  - ✅ Documentation updated appropriately
