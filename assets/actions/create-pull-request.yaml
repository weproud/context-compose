version: 1
kind: action
name: Create Pull Request
description: Create comprehensive Pull Request with detailed information and proper workflow
prompt: |
  Create comprehensive Pull Requests with professional standards and team collaboration.

  This action generates detailed PR descriptions, assigns appropriate reviewers,
  applies relevant labels, and ensures all quality checks pass before submission.
  It follows best practices for code review preparation and team communication.

  Use this when your feature branch is ready for review and merge. The process
  includes automated validation, reviewer assignment, and comprehensive
  documentation to facilitate efficient code review and collaboration.
enhanced-prompt: |-
  # 🔄 Pull Request Creation Workflow

  ## Core Steps

  **1. Pre-PR Validation**
  ```bash
  # Ensure branch is ready
  git status --porcelain || { echo "❌ Uncommitted changes"; exit 1; }

  # Run tests
  npm test || { echo "❌ Tests failing"; exit 1; }

  # Push latest changes
  git push origin $(git branch --show-current)
  ```

  **2. Generate PR Content**
  ```bash
  # Get context
  BRANCH=$(git branch --show-current)
  BASE_BRANCH=${1:-main}
  COMMITS=$(git log --oneline $BASE_BRANCH..$BRANCH | wc -l)

  # Create PR template
  cat > /tmp/pr-description.md << EOF
  ## Summary
  Brief description of changes and their purpose

  ## Changes Made
  - List specific changes
  - Include technical details

  ## Testing
  - [ ] Unit tests pass
  - [ ] Integration tests pass
  - [ ] Manual testing completed

  ## Checklist
  - [ ] Code follows style guidelines
  - [ ] Documentation updated
  - [ ] No breaking changes
  EOF
  ```

  **3. Create Pull Request**
  ```bash
  # Using GitHub CLI (if available)
  if command -v gh >/dev/null; then
    gh pr create \
      --title "feat: $(echo $BRANCH | sed 's/.*\///')" \
      --body-file /tmp/pr-description.md \
      --base $BASE_BRANCH \
      --head $BRANCH
  else
    echo "🔗 Create PR manually:"
    echo "Branch: $BRANCH → $BASE_BRANCH"
    echo "Commits: $COMMITS"
  fi
  ```

  **4. Post-Creation Setup**
  ```bash
  # Add labels and reviewers
  echo "📋 Add appropriate labels:"
  echo "- feature, bugfix, documentation, etc."

  echo "👥 Request reviewers:"
  echo "- Team leads for significant changes"
  echo "- Domain experts for specialized code"

  echo "✅ PR created and ready for review!"
  ```

  **🎯 Result:** Professional PR ready for team review and collaboration
