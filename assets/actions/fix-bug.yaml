version: 1
kind: action
name: Fix Bug
description: Fix a bug with proper workflow and testing
prompt: |
  Fix bugs systematically with proper identification, testing, and validation.

  This action guides through the bug fixing process including issue reproduction,
  root cause analysis, fix implementation, and comprehensive testing. It ensures
  proper documentation and prevents regression through systematic testing.

  Use this when addressing reported bugs or issues. The process includes
  reproduction setup, fix implementation, and validation to ensure complete
  bug resolution with proper testing coverage.
enhanced-prompt: |-
  # 🐛 버그 수정

  ## 1단계: 버그 정보 수집
  ```bash
  echo "=== 버그 수정 시작 ==="

  # 버그 정보 입력
  echo "🔍 버그 정보를 입력하세요:"
  read -p "버그 설명: " BUG_DESCRIPTION
  read -p "이슈 번호 (있다면): " ISSUE_NUMBER

  # 브랜치 이름 생성
  if [ -n "$ISSUE_NUMBER" ]; then
    BRANCH_NAME="bugfix/issue-$ISSUE_NUMBER"
  else
    BRANCH_NAME="bugfix/$(echo $BUG_DESCRIPTION | tr ' ' '-' | tr '[:upper:]' '[:lower:]' | head -c 30)"
  fi

  echo "🌿 버그 수정 브랜치: $BRANCH_NAME"
  ```

  ## 2단계: 버그 재현 환경 설정
  ```bash
  # 메인 브랜치에서 시작
  git checkout main
  git pull origin main

  # 버그 수정 브랜치 생성
  git checkout -b "$BRANCH_NAME"

  echo "📋 버그 재현 단계:"
  echo "1. 버그가 발생하는 조건을 확인하세요"
  echo "2. 재현 가능한 테스트 케이스를 작성하세요"
  echo "3. 현재 상태에서 테스트가 실패하는지 확인하세요"

  # 테스트 실행
  echo "🧪 현재 테스트 상태 확인..."
  npm test || echo "⚠️ 일부 테스트가 실패합니다 (예상됨)"
  ```

  ## 3단계: 버그 수정 구현
  ```bash
  echo "🔧 버그 수정 구현 가이드:"
  echo ""
  echo "1. 문제의 근본 원인을 파악하세요"
  echo "2. 최소한의 변경으로 문제를 해결하세요"
  echo "3. 다른 기능에 영향을 주지 않는지 확인하세요"
  echo "4. 코드 변경 후 테스트를 실행하세요"
  echo ""
  echo "💡 디버깅 팁:"
  echo "- console.log()를 사용하여 값 확인"
  echo "- 단위 테스트로 개별 함수 검증"
  echo "- 브라우저 개발자 도구 활용"
  echo ""
  echo "📝 버그 수정을 완료한 후 Enter를 누르세요:"
  read
  ```

  ## 4단계: 테스트 및 검증
  ```bash
  echo "🧪 버그 수정 검증..."

  # 테스트 실행
  echo "📋 테스트 실행 중..."
  npm test

  if [ $? -eq 0 ]; then
    echo "✅ 모든 테스트가 통과했습니다"
  else
    echo "❌ 테스트가 실패했습니다. 수정이 필요합니다."
    exit 1
  fi

  # 린팅 검사
  echo "📝 코드 스타일 검사..."
  npm run lint 2>/dev/null || echo "⚠️ 린터 설정되지 않음"

  echo "✅ 버그 수정 검증 완료"
  ```

  ## 5단계: 변경사항 커밋
  ```bash
  # 변경사항 스테이징
  git add .

  # 커밋 메시지 작성
  if [ -n "$ISSUE_NUMBER" ]; then
    COMMIT_MSG="fix: resolve issue #$ISSUE_NUMBER - $BUG_DESCRIPTION"
  else
    COMMIT_MSG="fix: $BUG_DESCRIPTION"
  fi

  git commit -m "$COMMIT_MSG

  - Identify root cause of the issue
  - Implement minimal fix
  - Add/update tests to prevent regression
  - Verify all tests pass"

  # 원격 브랜치에 푸시
  git push -u origin "$BRANCH_NAME"

  echo "🎉 버그 수정 완료!"
  echo "📋 다음 단계:"
  echo "  1. Pull Request 생성"
  echo "  2. 코드 리뷰 요청"
  echo "  3. QA 테스트 진행"
  echo "  4. 메인 브랜치에 병합"
  ```

  **🎯 결과:** 체계적으로 수정되고 테스트된 버그 픽스
