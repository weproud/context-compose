version: 1
kind: context
name: api context
description: Context for API development with RESTful design and comprehensive documentation

context:
  workflow: workflows/feature-workflow.yaml
  roles:
- personas/dan-abramov.yaml
- personas/martin-fowler.yaml
  rules:
    - rules/the-must-follow.yaml
    - rules/api-design.yaml
    - rules/clean-code.yaml
    - rules/security-guidelines.yaml
    - rules/testing-principles.yaml
    - rules/error-handling.yaml
    - rules/documentation-standards.yaml
  mcps:
    - mcps/sequential-thinking.yaml
    - mcps/context7.yaml
    - mcps/web-search.yaml
  notify:
    - notify/slack.yaml
prompt: |
  Develop RESTful APIs with comprehensive documentation and testing.
  Prioritize developer experience, consistency, and scalability in all API design.
  Follow OpenAPI standards, implement proper authentication and error handling.
  Ensure high-quality code with extensive testing and clear documentation.
enhanced-prompt: |-
  # API Development Context

  ## API Design Principles
  1. **RESTful Design**: Semantic use of HTTP methods and status codes
  2. **Consistency**: Uniform naming conventions, response formats, and error handling
  3. **Security First**: Default authentication, authorization, and data protection
  4. **Developer Experience**: Clear documentation and intuitive API design

  ## Development Process
  1. **API Design**:
     - Resource modeling and endpoint definition
     - Request/response schema design
     - Error handling and status code definition
     - Authentication/authorization method determination

  2. **OpenAPI Specification**:
     - Write Swagger/OpenAPI 3.0 specifications
     - Include schema definitions and examples
     - Specify authentication methods and security requirements
     - Configure automatic documentation generation

  3. **Implementation & Testing**:
     - Implement controller and service layers
     - Input validation and data transformation
     - Write unit/integration/E2E tests
     - Synchronize API documentation with implementation

  ## RESTful API Design
  ```
  GET    /api/v1/users           # Retrieve user list
  GET    /api/v1/users/{id}      # Retrieve specific user
  POST   /api/v1/users           # Create new user
  PUT    /api/v1/users/{id}      # Full user update
  PATCH  /api/v1/users/{id}      # Partial user update
  DELETE /api/v1/users/{id}      # Delete user
  ```

  ## HTTP Status Codes
  - 200 OK: Successful retrieval/update
  - 201 Created: Successful creation
  - 400 Bad Request: Invalid request
  - 401 Unauthorized: Authentication required
  - 403 Forbidden: No permission
  - 404 Not Found: Resource not found
  - 500 Internal Server Error: Server error

  ## Success Criteria
  - ✅ RESTful principles compliance
  - ✅ Consistent response format and error handling
  - ✅ Comprehensive input validation
  - ✅ Proper authentication/authorization implementation
  - ✅ Complete OpenAPI documentation
  - ✅ High test coverage (90%+)

  **Ready to start API development. What API would you like to develop?**
