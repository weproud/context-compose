version: 1
kind: action
name: Send Email Notification
description: Send email notifications with rich formatting and attachment support
prompt: Send email notifications with proper formatting and error handling
enhanced-prompt: |-
  **Send email notifications with rich formatting, attachments, and comprehensive error handling.**

  ## Email Configuration
  1. **SMTP Setup:**
     - Configure SMTP server settings (host, port, security)
     - Set up authentication credentials securely
     - Handle different email providers (Gmail, Outlook, SendGrid)
     - Implement connection pooling for performance

  2. **Email Templates:**
     - Create reusable HTML email templates
     - Support plain text fallbacks
     - Implement responsive design for mobile
     - Include company branding and styling

  ## Email Types & Content
  1. **Notification Categories:**
     - ✅ Success: Task completion, successful deployments
     - ⚠️ Warning: Non-critical issues, maintenance notices
     - ❌ Error: Build failures, critical system issues
     - ℹ️ Info: Status updates, progress reports

  2. **Rich Content Support:**
     - HTML formatting with CSS styling
     - Embedded images and logos
     - Tables for structured data
     - Code blocks with syntax highlighting

  ## Email Structure
  ```html
  Subject: [PROJECT] Task Status: {task_name}
  
  <html>
  <body>
    <h2>Task Completion Report</h2>
    <p><strong>Status:</strong> ✅ Completed Successfully</p>
    <p><strong>Branch:</strong> feature/user-authentication</p>
    <p><strong>Duration:</strong> 15 minutes</p>
    
    <h3>Summary</h3>
    <p>User authentication feature has been implemented with:</p>
    <ul>
      <li>JWT token-based authentication</li>
      <li>Password hashing with bcrypt</li>
      <li>Rate limiting for login attempts</li>
    </ul>
    
    <h3>Next Steps</h3>
    <p>Pull request created: <a href="{pr_url}">#{pr_number}</a></p>
    
    <hr>
    <p><small>Generated by Task-Action System</small></p>
  </body>
  </html>
  ```

  ## Implementation Steps
  1. **Email Preparation:**
     - Validate recipient email addresses
     - Choose appropriate template based on notification type
     - Populate template with dynamic content
     - Add relevant attachments (logs, reports)

  2. **Sending Process:**
     - Establish SMTP connection with retry logic
     - Send email with proper headers and encoding
     - Handle delivery confirmations if available
     - Log sending attempts and results

  3. **Error Handling:**
     - Retry failed sends with exponential backoff
     - Handle authentication and connection errors
     - Provide fallback notification methods
     - Log detailed error information

  ## Security & Privacy
  1. **Data Protection:**
     - Encrypt sensitive information in emails
     - Avoid including credentials or secrets
     - Implement email content filtering
     - Respect privacy regulations (GDPR, CCPA)

  2. **Authentication:**
     - Use secure authentication methods (OAuth2, App Passwords)
     - Implement proper credential storage
     - Rotate credentials regularly
     - Monitor for unauthorized access

  ## Email Features
  1. **Attachments:**
     - Support common file formats (PDF, logs, images)
     - Implement file size limits
     - Virus scanning for uploaded attachments
     - Compression for large files

  2. **Delivery Options:**
     - Priority levels (high, normal, low)
     - Delivery confirmation requests
     - Read receipt requests
     - Scheduled sending

  ## Recipient Management
  1. **Distribution Lists:**
     - Support multiple recipients
     - Team-based distribution lists
     - Role-based notifications
     - Opt-in/opt-out management

  2. **Personalization:**
     - Personalized greetings and content
     - Timezone-aware scheduling
     - Language localization support
     - User preference handling

  ## Monitoring & Analytics
  1. **Delivery Tracking:**
     - Monitor email delivery rates
     - Track bounce and failure rates
     - Analyze open and click rates
     - Generate delivery reports

  2. **Performance Metrics:**
     - Email sending performance
     - Template rendering times
     - SMTP connection reliability
     - Error rate monitoring

  ## Example Configuration
  ```yaml
  email:
    smtp:
      host: smtp.gmail.com
      port: 587
      secure: true
      auth:
        user: ${EMAIL_USER}
        pass: ${EMAIL_PASSWORD}
    
    templates:
      success: templates/success.html
      error: templates/error.html
      warning: templates/warning.html
    
    recipients:
      developers: ["dev1@company.com", "dev2@company.com"]
      managers: ["manager@company.com"]
      alerts: ["alerts@company.com"]
  ```

  ## Success Criteria
  - ✅ Email sent successfully to all recipients
  - ✅ Content properly formatted and rendered
  - ✅ Attachments included and accessible
  - ✅ No sensitive information exposed
  - ✅ Delivery confirmed or logged appropriately
