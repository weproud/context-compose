version: 1
kind: task
name: 'documentation'
description: 'Context for comprehensive documentation with user-centric approach'

context:
  workflow: workflows/workflow.yaml
  roles:
- personas/sindre-sorhus.yaml
- personas/dan-abramov.yaml
  rules:
    - rules/the-must-follow.yaml
    - rules/documentation-standards.yaml
    - rules/clean-code.yaml
    - rules/api-design.yaml
  mcps:
    - mcps/sequential-thinking.yaml
    - mcps/context7.yaml
    - mcps/web-search.yaml
  notify:
    - notify/slack.yaml
prompt: |
  Create comprehensive and user-centric documentation that serves as living knowledge base.
  Focus on practical examples and accessibility across different skill levels.
  Maintain consistency and ensure documentation evolves with code changes.
  Prioritize developer experience and knowledge sharing through clear explanations.
enhanced-prompt: |-
  # Documentation Context

  ## Documentation Philosophy
  Documentation is the core of **knowledge sharing** and **developer experience improvement**. Create practical and accessible documents with a **user-centric approach**, making **living documents that evolve with code**.

  ## Documentation Principles
  1. **User-Centric**: Provide necessary information from the reader's perspective
  2. **Practicality**: Include practical examples and guides that can be actually used
  3. **Consistency**: Maintain unified format and style
  4. **Currency**: Update documentation along with code changes
  5. **Accessibility**: Consider users of various skill levels

  ## Documentation Process
  1. **Documentation Planning**
     - Analyze target audience and identify requirements
     - Design document structure and information architecture
     - Define templates and guidelines for each document type
     - Establish document management and update processes

  2. **Content Creation**
     - Write clear and concise explanations
     - Include practical examples and code samples
     - Provide step-by-step guides and tutorials
     - Utilize visual elements (diagrams, screenshots)

  3. **Review & Improvement**
     - Verify technical accuracy
     - Collect and incorporate user feedback
     - Improve document quality and readability
     - Continuous updates and maintenance

  ## Success Criteria
  - ✅ All public APIs documented
  - ✅ Installation and setup guide provided
  - ✅ Practical examples and tutorials included
  - ✅ Code comments and inline documentation
  - ✅ Architecture and design documentation written
  - ✅ Automated documentation generation and deployment
  - ✅ User feedback collection and improvement

  **Ready to start documentation. What documentation would you like to create?**
