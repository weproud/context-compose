---
description:
globs:
alwaysApply: false
---
# 개발 워크플로우 가이드

## 주요 개발 스크립트

### 빌드 및 실행
- `pnpm build` - TypeScript 컴파일
- `pnpm dev:server` - MCP 서버 개발 모드 실행
- `pnpm dev:cli` - CLI 개발 모드 실행
- `pnpm start:server` - 빌드된 MCP 서버 실행
- `pnpm task-action` - CLI 도구 직접 실행

### 테스트 및 품질 관리
- `pnpm test` - Vitest 단위 테스트 실행
- `pnpm lint` - ESLint 코드 검사
- `pnpm lint:fix` - ESLint 자동 수정
- `pnpm format` - Prettier 코드 포맷팅
- `pnpm format:check` - Prettier 포맷 검사
- `pnpm type-check` - TypeScript 타입 검사

### MCP 디버깅
- `pnpm inspect` - MCP Inspector로 서버 검사
- `pnpm inspect:built` - 빌드된 서버 검사

## 개발 시 주의사항

### 코드 변경 시
1. 공유 로직은 `src/core/tools/`에서 수정
2. 스키마 변경은 `src/schemas/`에서 수정
3. CLI 명령어는 `src/cli/commands/`에서 수정
4. MCP 도구는 `mcp-server/src/tools/`에서 수정

### 테스트 작성
- 단위 테스트: `tests/unit/` 디렉토리
- E2E 테스트: `tests/e2e/` 디렉토리
- 설정 파일: [vitest.config.ts](mdc:vitest.config.ts), [playwright.config.ts](mdc:playwright.config.ts)

### 코드 품질
- ESLint 설정: [.eslintrc.json](mdc:.eslintrc.json)
- Prettier 설정: [.prettierrc](mdc:.prettierrc)
- TypeScript 설정: [tsconfig.json](mdc:tsconfig.json)
