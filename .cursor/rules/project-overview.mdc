---
description:
globs:
alwaysApply: false
---
# Context Compose 프로젝트 개요

이 프로젝트는 **Context Compose**로, Model Context Protocol (MCP) 서버와 CLI 도구를 제공하는 TypeScript 기반 패키지입니다.

## 프로젝트 구조

- **메인 진입점**: [package.json](mdc:package.json)에서 정의된 이중 진입점 구조
- **CLI 도구**: `context-compose` - [src/cli/index.ts](mdc:src/cli/index.ts)에서 시작
- **MCP 서버**: `context-compose-mcp` - [mcp-server/server.ts](mdc:mcp-server/server.ts)에서 시작
- **빌드 설정**: [tsconfig.json](mdc:tsconfig.json)와 [eslint.config.js](mdc:eslint.config.js)
- **테스트**: [vitest.config.ts](mdc:vitest.config.ts)와 [playwright.config.ts](mdc:playwright.config.ts)

## 핵심 기능

1. **MCP 서버**: AI 모델과의 직접 통합 (Claude, ChatGPT 등)
2. **CLI 도구**: 터미널에서 컨텍스트 관리 및 워크플로우 실행
3. **컨텍스트 시스템**: 프로젝트별 개발 가이드라인과 규칙 관리
4. **워크플로우 엔진**: 개발, 테스트, 배포를 위한 자동화된 작업 흐름
5. **역할 기반 개발**: Dan Abramov, Martin Fowler 같은 전문가 페르소나 적용
6. **알림 시스템**: Slack, 이메일 등을 통한 작업 상태 알림

## 주요 의존성

- **fastmcp**: MCP 서버 구현
- **commander**: CLI 인터페이스
- **inquirer**: 인터랙티브 프롬프트
- **mustache**: 템플릿 엔진
- **yaml**: YAML 파일 처리
- **zod**: 스키마 검증
